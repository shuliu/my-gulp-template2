
// -------------------------------------
//
// * mixins
//
// -------------------------------------
//
// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-border-focus` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($color: $input-border-focus) {
  $color-rgba: rgba(red($color), green($color), blue($color), .5);
  &:focus {
    border-color: $color;
    outline: 0;
    // @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 0 5px $color-rgba);
    @include box-shadow(0 0 5px $color-rgba);
  }
}



// -------------------------------------
//
// * Value
//
// -------------------------------------

//
// * fieldset :: This config from bootstrap
// -------------------------------------
// ******* fieldset: 一組相關表單的字段集
fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

// ******* fieldset > legend: 字段集裡的標題
legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: $line-height-computed;
  font-size: ($font-size-base * 1.5);
  line-height: inherit;
  // color: $legend-color;
  border: 0;
  // border-bottom: 1px solid $legend-border-color;
}

//
// * value:: label: input元素標籤
// -------------------------------------
label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  // margin-bottom: 5px;
  // font-weight: bold;
  color: $gray;
}


//
// * value:: Placeholder text
// -------------------------------------
@mixin placeholder($color: $input-color-placeholder) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

//
// * value:: select
// -------------------------------------
select {
  position: relative;
  display: inline-block;
  // 與 input 高度一致化
  padding: $padding-y ($padding-x - 4);
  padding-right: $padding-x * 2; // 自定箭頭
  font-size: $font-size-base; // ~15px
  line-height: $line-height-base;
  // margin-right: 4px;
  border-color: $input-border;
  border-radius: $border-radius-base;

  &:focus {
    outline: 0;
  }

  // Size
  &.select-sm {
    padding: $btn-padding-y-sm ($btn-padding-x-sm + 4) $btn-padding-y-sm ($btn-padding-x-sm - 4);
    padding-right: $btn-padding-x-sm * 2; // 自定箭頭
    font-size: $font-size-small; // ~13px
    line-height: $line-height-small;
  }
  &.error {
    border: 1px solid $vermillion;
  }

  // Disabled and read-only inputs
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;  // 禁止點擊
  }
}

// Selete sizes
@mixin select-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;
  @include border-radius($border-radius);
}


// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

select:not([multiple]) {
  background: $white url($images-url + 'icons/icon-caret-down.svg') no-repeat 95% 50%;
  // background: $white url(/public/images/icons/icon-caret-down.svg) no-repeat 93% 50%;
  // 移除預設下拉箭頭
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;

  // Disabled and read-only inputs
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
  }
}
// 針對 IE10 移除預設select arrow，ie9以下需用js控制
select::-ms-expand {
  display: none;
}

//
// * value:: input
// -------------------------------------

/* input: search */
// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}
// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.
input[type="search"] {
  -webkit-appearance: none;
}

/* input: radio & checkbox */
// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  // margin: 4px 0 0;
  margin-right: $grid-padding / 2;
  margin-top: 1px \9; // IE8-9
  line-height: normal;
}
//** radio
.radio-inline {
  & + .radio-inline {
    margin-left: $grid-padding;
  }
}
//** checkbox
.checkbox-inline {
  & + .checkbox-inline {
    margin-left: $grid-padding;
  }
}

//** 自訂 checkbox 樣式
input[type=checkbox].checkbox {
  position: absolute;
  // reset
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  padding: 0;
  border: 0;
  // hide
  visibility: hidden;
}
label.checkbox-label {
  padding-left: $input-checkbox-width + ($padding-x / 2);
  background: $transparent url($images-url + 'icons/icon-checkbox-off.svg') no-repeat 0% 50%;
  // background-size: 100% 100%;
  vertical-align: middle;
  cursor: pointer;
}
input[type=checkbox].checkbox:checked + label.checkbox-label {
  background-image: url($images-url + 'icons/icon-checkbox-on.svg');
}

// 當 label 沒有包覆文字時
// 請新增 '.checkbox-group' 將 checkbox 與 label 包裝
// ** 目前使用於「商品加購」
.checkbox-group {
  // overflow: hidden;

  .checkbox-label {
    padding-left: 0;
    min-width: $input-checkbox-width;
    min-height: $input-checkbox-width;
  }

  & + .image {
    margin-left: $padding-x - 4;
  }
}



// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;  // 禁止點擊
  }
}

/* input: file */
// Set the height of file controls to match text inputs
input[type="file"] {
  display: block;
}

/* input: range */
// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

/* input: range */
// 移除 input number 預設箭頭
input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}


/* input: Focus for file, radio, and checkbox */
// -------------------------------------
// ** Use for --> input: file, radio, and checkbox
// -------------------------------------
// WebKit-style focus
// @mixin tab-focus() {
//   // Default
//   outline: thin dotted;
//   // WebKit
//   outline: 5px auto -webkit-focus-ring-color;
//   outline-offset: -2px;
// }

// input[type="file"]:focus,
// input[type="radio"]:focus,
// input[type="checkbox"]:focus {
//   @include tab-focus;
// }

/* output -- in HTML5 */
// Adjust output element
output {
  display: block;
  padding-top: ($padding-y + 1);
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
}


//
// * value:: input:: text, search, password
// -------------------------------------
input[type="text"],
input[type="search"],
input[type="password"],
input[type="number"] {
  display: inline-block;
  width: $input-width-base;
  // height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-y;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  // @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  // Placeholder
  @include placeholder;

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    background-color: $input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
  }

  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;  // 禁止點擊
  }

  //
  // input 'width'
  //
  &.full { width: $input-width-full; }
  &.input-lg {
    @include media-breakpoint-down(lg) {
      width: $input-width-lg - 48;
    }
    width: $input-width-lg;
  }
  &.input-md { width: $input-width-md; }
  &.input-sm { width: $input-width-sm; }
  &.input-mini { width: $input-width-mini; }
  &.input-micro { width: $input-width-micro; }

  //
  // input addClass '.error'
  //
  &.error {
    border: 1px solid $vermillion;
  }
}
// Password Show/hide
.input-password {
  display: inline-block;
  position: relative;
  z-index: $zindex-base;

  .hide-password {
    position: absolute;
    right: $padding-y + 2;
    z-index: 22px;//$zindex-hover;
    top: 0;
    @include center(y);
  }
}
// .input-password .hide-password { position: absolute; right: 10px; z-index: 10; top: 22px; bottom: auto; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); }
// .input-password .hide-password { position: absolute; right: 10px; z-index: 10; top: 0; top: 50%; bottom: auto; -webkit-transform: translateY(-50%); -ms-transform: translateY(-50%); transform: translateY(-50%); }

//
// textarea
//
textarea {
  @extend input[type="text"];
  width: 100%;
}



//
// * value:: input-group
// -------------------------------------
// 使用情境： 一個input加一個button，才使用input-group包
//
.input-group {
  position: relative;
  display: inline-block;
  // vertical-align: middle;

  // @if $enable-flex {
  //   display: flex;
  // } @else {
  //   // display: table;
  //   // border-collapse: separate;
  // }

  // ~~> 'input' element
  input[type="text"], input[type="search"] {
    position: relative;
    z-index: 2;
    // Bring the "active" form control to the front
    @include hover-focus-active {
      z-index: 3;
    }
    float: left;
    width: auto;
    // @if $enable-flex {
    //   flex: 1;
    // } @else {
    //   float: left;
    //   width: auto;
    // }
    margin-bottom: 0;

    &:first-child {
      border-right: 0;
      @include border-right-radius(0);
    }

    //
    // input 'width'
    //
    &.full { width: $input-width-full; }
    &.input-lg { width: $input-width-lg; }
    &.input-md { width: $input-width-md; }
    &.input-sm { width: $input-width-sm; }
    &.input-mini { width: $input-width-mini; }
  }

  // ~~> '.btn' element
  .btn {
    // @if $enable-flex {
    //   // do nothing
    // } @else {
    //   // display: table-cell;
    // }
    padding-left: $btn-padding-x-sm;
    padding-right: $btn-padding-x-sm;
    // margin-left: -1px;
    white-space: nowrap;
    @include border-left-radius(0);
    // vertical-align: middle; // Match the inputs

    // &:last-child {
    //   @include border-left-radius(0);
    // }

    // &:not(:first-child):not(:last-child) {
    //   @include border-radius(0);
    // }
  }

  // ~~> input + input
  input[type="text"] + input[type="text"],
  input[type="search"] + input[type="search"] {
    @include border-left-radius(0);
  }
}

// Sizing options
.input-group-sm {
  input[type="text"], input[type="search"] {
    padding: 3px 6px;
    width: 50%;
  }
}



//
// * value:: number-group
// -------------------------------------
// 使用情境： 控制商品數量 加減
.number-group {
  display: inline-block;
  vertical-align: middle;

  // width: 112px;
  // height: 28px;
  font-size: $font-size-base;
  line-height: 1;
  // border-left: 0;
  // border-right: 0;
  // border-top: 1px $input-border solid;
  // border-bottom: 1px $input-border solid;
  // margin: 0 auto;

  input, button {
    float: left;
    height: $input-height-sm;
    // padding: ($padding-y / 2) ($padding-x / 2);
    // &:active, &:hover, &:focus {
    //   outline: 0;
    // }
  }

  input.number-view {
    width: $input-width-mini - $padding-x;
    text-align: center;
    margin-left: -1px;
    @include border-left-radius(0);

    &:read-only, &:-moz-read-only {
      background: $white;
      cursor: default;
    }
  }

  .number-less, .number-plus {
    width: $input-height-sm;
    color: $gray;
    background-color: lighten($gray-light, 5%);
    border: 1px solid $input-border;
  }

  .number-plus {
    margin-left: -1px;
    @include border-left-radius(0);
  }

  // 針對 '購物車清單' 縮小寬度
  &.shrink {
    input.number-view {
      width: $input-width-micro - $padding-x;
    }
  }
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

// .input-group-lg > .form-control,
// .input-group-lg > .input-group-addon,
// .input-group-lg > .input-group-btn > .btn {
//   @extend .form-control-lg;
// }
// .input-group-sm > .form-control,
// .input-group-sm > .input-group-addon,
// .input-group-sm > .input-group-btn > .btn {
//   @extend .form-control-sm;
// }

// Sizing
// .form-control-sm {
//   padding: $input-padding-y-sm $input-padding-x-sm;
//   font-size: $font-size-small;
//   @include border-radius($border-radius-small);
// }
// .form-control-lg {
//   padding: $input-padding-y-lg $input-padding-x-lg;
//   font-size: $font-size-large;
//   @include border-radius($border-radius-large);
// }


//
// Text input groups
//

// .input-group-addon {
//   padding: $input-padding-y $input-padding-x;
//   font-size: $font-size-base;
//   font-weight: normal;
//   line-height: 1;
//   color: $input-color;
//   text-align: center;
//   background-color: $input-group-addon-bg;
//   border: $input-btn-border-width solid $input-group-addon-border-color;
//   @include border-radius($border-radius-base);

//   // Sizing
//   &.form-control-sm {
//     padding: $input-padding-y-sm $input-padding-x-sm;
//     font-size: $font-size-small;
//     @include border-radius($border-radius-small);
//   }
//   &.form-control-lg {
//     padding: $input-padding-y-lg $input-padding-x-lg;
//     font-size: $font-size-large;
//     @include border-radius($border-radius-large);
//   }

//   // Nuke default margins from checkboxes and radios to vertically center within.
//   input[type="radio"],
//   input[type="checkbox"] {
//     margin-top: 0;
//   }
// }


//
// Reset rounded corners
//

// .input-group input:first-child,
// .input-group-addon:first-child,
// .input-group-btn:first-child > .btn,
// .input-group-btn:first-child > .btn-group > .btn,
// .input-group-btn:first-child > .dropdown-toggle,
// .input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
// .input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
//   @include border-right-radius(0);
// }
// .input-group-addon:first-child {
//   border-right: 0;
// }
// .input-group .form-control:last-child,
// .input-group-addon:last-child,
// .input-group-btn:last-child > .btn,
// .input-group-btn:last-child > .btn-group > .btn,
// .input-group-btn:last-child > .dropdown-toggle,
// .input-group-btn:first-child > .btn:not(:first-child),
// .input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
//   @include border-left-radius(0);
// }
// .input-group-addon:last-child {
//   border-left: 0;
// }


//
// Button input groups
//

// .input-group-btn {
//   position: relative;
//   // Jankily prevent input button groups from wrapping with `white-space` and
//   // `font-size` in combination with `inline-block` on buttons.
//   font-size: 0;
//   white-space: nowrap;

//   // Negative margin for spacing, position for bringing hovered/focused/actived
//   // element above the siblings.
//   > .btn {
//     position: relative;
//     + .btn {
//       margin-left: (-$input-btn-border-width);
//     }
//     // Bring the "active" button to the front
//     @include hover-focus-active {
//       z-index: 3;
//     }
//   }

//   // Negative margin to only have a single, shared border between the two
//   &:first-child {
//     > .btn,
//     > .btn-group {
//       margin-right: (-$input-btn-border-width);
//     }
//   }
//   &:last-child {
//     > .btn,
//     > .btn-group {
//       z-index: 2;
//       margin-left: (-$input-btn-border-width);
//       // Because specificity
//       @include hover-focus-active {
//         z-index: 3;
//       }
//     }
//   }
// }


// Input groups need that 100% width though
// .input-group > .form-control {
//   width: 100%;
// }
